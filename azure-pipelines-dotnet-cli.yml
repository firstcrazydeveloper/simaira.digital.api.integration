trigger: none # will disable CI builds entirely

pool:
  vmImage: 'windows-latest'  # Use an agent that supports .NET

variables:
- group: Simaira.Digital.API.Integration #https://learn.microsoft.com/en-us/azure/devops/pipelines/library/variable-groups?view=azure-devops&tabs=azure-pipelines-ui%2Cyaml
 
steps:
# Step 1: Install .NET SDK
- checkout: self
  fetchDepth: 0
- task: UseDotNet@2
  displayName: 'Install Dotnet'
  inputs:
    packageType: 'sdk'
    version: '8.x'  # Adjust to your .NET version

# Step 2: Restore NuGet packages
- script: |
    cd source
    dotnet restore
  displayName: 'Restore Project'

# 2. Prepare the SonarQube analysis
- script: |
    dotnet tool install --global dotnet-sonarscanner
  displayName: 'Install dotnet Sonar Scanner & Report Generator'

- script: |
    dotnet sonarscanner begin -o:"$(SONAR_ORG_KEY)" -k:"$(SONAR_PROJECT_KEY)" -n:"simaira.digital.api.integration" -d:sonar.host.url="$(SONAR_URL)" -d:sonar.token="$(SONAR_TOKEN)"
  displayName: 'dotnet Sonar Scanner Begin'
  
# 3. Build the project
- script: |
    cd source
    dotnet build --configuration Release
  displayName: 'Build the project'

# 4. Complete the SonarQube analysis
- script: |
    dotnet sonarscanner end /d:sonar.login="$(SONAR_TOKEN)"
  displayName: 'Run SonarScanner End'


# Step 5: Run unit tests
- script: |
    cd source
    dotnet test --configuration Release --no-build --collect:"Code Coverage"
  displayName: 'Run Integration Tests'