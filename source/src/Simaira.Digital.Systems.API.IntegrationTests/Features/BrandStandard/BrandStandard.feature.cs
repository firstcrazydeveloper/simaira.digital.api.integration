// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Simaira.Digital.Systems.API.IntegrationTests.Features.BrandStandard
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class BrandStandardFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
        private static string[] featureTags = new string[] {
                "TestSuite_Simaira.Digital",
                "BrandStandard"};
        
#line 1 "BrandStandard.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features/BrandStandard", "Brand Standard", "\tThe tests verify Brand Standard Purchasing & Compliances.\r\n\tThis includes:\r\n\t1. " +
                    "Optimal Products\r\n\t2. Outstanding Categories", ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "Brand Standard")))
            {
                global::Simaira.Digital.Systems.API.IntegrationTests.Features.BrandStandard.BrandStandardFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(_testContext);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 9
#line hidden
#line 10
testRunner.Given("Get aligned CDM Sites and Accounts for \'ecolab3dcorptest1@mailinator.com\' from CD" +
                    "M API for Brand Standard", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "AccountNumber"});
#line 11
 testRunner.And("Set User Accounts", ((string)(null)), table1, "And ");
#line hidden
#line 13
 testRunner.And("Set Service Areas and Devices for Accounts", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Simaira.Digital_API Get Brand Standard Unit Level Optimal Products")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Brand Standard")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("TestSuite_Simaira.Digital")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("BrandStandard")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("BrandStandardUnitOptimalProducts")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Integrationtest")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Simaira.DigitalIntegrationtest")]
        public void Simaira_Digital_APIGetBrandStandardUnitLevelOptimalProducts()
        {
            string[] tagsOfScenario = new string[] {
                    "BrandStandardUnitOptimalProducts",
                    "Integrationtest",
                    "Simaira.DigitalIntegrationtest"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Simaira.Digital_API Get Brand Standard Unit Level Optimal Products", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 18
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 9
this.FeatureBackground();
#line hidden
#line 19
 testRunner.Then("Get Brand Standard UnitOptimalProducts", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Simaira.Digital_API Get Brand Standard Outstanding Categories")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Brand Standard")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("TestSuite_Simaira.Digital")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("BrandStandard")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("BrandStandardOutstandingCategories")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Integrationtest")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Simaira.DigitalIntegrationtest")]
        public void Simaira_Digital_APIGetBrandStandardOutstandingCategories()
        {
            string[] tagsOfScenario = new string[] {
                    "BrandStandardOutstandingCategories",
                    "Integrationtest",
                    "Simaira.DigitalIntegrationtest"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Simaira.Digital_API Get Brand Standard Outstanding Categories", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 24
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 9
this.FeatureBackground();
#line hidden
#line 25
 testRunner.Then("Get Brand Standard OutstandingCategories", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Simaira.Digital_API Get Brand Standard Corporate Optimal Products")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Brand Standard")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("TestSuite_Simaira.Digital")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("BrandStandard")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("BrandStandardCorporateOptimalProducts")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Integrationtest")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Simaira.DigitalIntegrationtest")]
        public void Simaira_Digital_APIGetBrandStandardCorporateOptimalProducts()
        {
            string[] tagsOfScenario = new string[] {
                    "BrandStandardCorporateOptimalProducts",
                    "Integrationtest",
                    "Simaira.DigitalIntegrationtest"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Simaira.Digital_API Get Brand Standard Corporate Optimal Products", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 31
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 9
this.FeatureBackground();
#line hidden
#line 32
 testRunner.Then("Get Brand Standard CorporateOptimalProducts", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Simaira.Digital_API Get Brand Standard Purchase Categories Compliance")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Brand Standard")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("TestSuite_Simaira.Digital")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("BrandStandard")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("BrandStandardPurchaseCategoriesCompliance")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Integrationtest")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Simaira.DigitalIntegrationtest")]
        public void Simaira_Digital_APIGetBrandStandardPurchaseCategoriesCompliance()
        {
            string[] tagsOfScenario = new string[] {
                    "BrandStandardPurchaseCategoriesCompliance",
                    "Integrationtest",
                    "Simaira.DigitalIntegrationtest"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Simaira.Digital_API Get Brand Standard Purchase Categories Compliance", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 38
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 9
this.FeatureBackground();
#line hidden
#line 39
 testRunner.Then("Get Brand Standard Purchase Categories Compliance", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Simaira.Digital_API Get Brand Standard Purchase OverallPerformance By Categories")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Brand Standard")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("TestSuite_Simaira.Digital")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("BrandStandard")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("BrandStandardPurchaseOverallPerformanceByCategories")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Integrationtest")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Simaira.DigitalIntegrationtest")]
        public void Simaira_Digital_APIGetBrandStandardPurchaseOverallPerformanceByCategories()
        {
            string[] tagsOfScenario = new string[] {
                    "BrandStandardPurchaseOverallPerformanceByCategories",
                    "Integrationtest",
                    "Simaira.DigitalIntegrationtest"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Simaira.Digital_API Get Brand Standard Purchase OverallPerformance By Categories", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 45
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 9
this.FeatureBackground();
#line hidden
#line 46
 testRunner.Then("Get Brand Standard Purchase OverallPerformance By Categories", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
