// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Simaira.Digital.Systems.API.IntegrationTests.Features.UserInfo
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class UserInfoPageFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
        private static string[] featureTags = new string[] {
                "TestSuite_Simaira.Digital",
                "UserInfo"};
        
#line 1 "UserInfo.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features/UserInfo", "User Info Page", @"	The tests verify user aligned CDM Site Locations/ Accounts/ Service Areas/ Devices operations.
	This includes:
	1. Aligned CDM Sites & Account
	2. Service Areas & Devices
	3. Account Info & Details
	4. Location Details
	5. H7Id Connected Accounts
	6. Ecolab3d & ESS User Customer Goal", ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "User Info Page")))
            {
                global::Simaira.Digital.Systems.API.IntegrationTests.Features.UserInfo.UserInfoPageFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(_testContext);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Simaira.Digital_API Users Emails exist in CDM with aligned CDM Sites and Accounts" +
            "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "User Info Page")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("TestSuite_Simaira.Digital")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("UserInfo")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("UsersCDMSitesAndAccounts")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Simaira.DigitalIntegrationtest")]
        public void Simaira_Digital_APIUsersEmailsExistInCDMWithAlignedCDMSitesAndAccounts()
        {
            string[] tagsOfScenario = new string[] {
                    "UsersCDMSitesAndAccounts",
                    "Simaira.DigitalIntegrationtest"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Simaira.Digital_API Users Emails exist in CDM with aligned CDM Sites and Accounts" +
                    "", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 15
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                            "Email"});
#line 16
 testRunner.Given("The users already exist in CDM API", ((string)(null)), table8, "Given ");
#line hidden
#line 18
 testRunner.Then("Get aligned CDM Sites and Accounts of Users from CDM API", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                            "AccountNumber"});
#line 19
 testRunner.Then("Set User Accounts", ((string)(null)), table9, "Then ");
#line hidden
#line 21
 testRunner.Then("Get Service Areas and Devices for Accounts", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                            "AccountNumber"});
#line 22
 testRunner.Then("Get Account Info", ((string)(null)), table10, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                            "Sites"});
#line 24
 testRunner.Then("Get Location Details", ((string)(null)), table11, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Simaira.Digital_API_ h7Id Connected Account Exist exist")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "User Info Page")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("TestSuite_Simaira.Digital")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("UserInfo")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("H7IdConnectAccounts")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ESSIntegrationtest")]
        public void Simaira_Digital_API_H7IdConnectedAccountExistExist()
        {
            string[] tagsOfScenario = new string[] {
                    "H7IdConnectAccounts",
                    "ESSIntegrationtest"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Simaira.Digital_API_ h7Id Connected Account Exist exist", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 30
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                            "H7Id"});
                table12.AddRow(new string[] {
                            "a071O000015I1OSQA0"});
#line 31
 testRunner.Given("The H7Id already exist", ((string)(null)), table12, "Given ");
#line hidden
#line 34
 testRunner.Then("Get Connected Accounts for H7Id Info", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 35
 testRunner.Then("Set h7Id Connected Accounts", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 36
 testRunner.Then("Get Service Areas and Devices for Accounts", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                            "AccountNumber"});
#line 37
 testRunner.Then("Get Account Info", ((string)(null)), table13, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                            "AccountNumber"});
#line 39
 testRunner.Then("Get Account Details Info", ((string)(null)), table14, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                            "Sites"});
#line 41
 testRunner.Then("Get Location Details", ((string)(null)), table15, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Simaira.Digital_API Ecolab User Customer Goal")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "User Info Page")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("TestSuite_Simaira.Digital")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("UserInfo")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Ecola3DUserCustomerGoal")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Simaira.DigitalIntegrationtest")]
        public void Simaira_Digital_APIEcolabUserCustomerGoal()
        {
            string[] tagsOfScenario = new string[] {
                    "Ecola3DUserCustomerGoal",
                    "Simaira.DigitalIntegrationtest"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Simaira.Digital_API Ecolab User Customer Goal", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 47
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                            "Email"});
                table16.AddRow(new string[] {
                            "ecolab3dcorptest1@mailinator.com"});
                table16.AddRow(new string[] {
                            "ecolab3dunittest17@mailinator.com"});
                table16.AddRow(new string[] {
                            "ecolab3dunittest14@mailinator.com"});
#line 48
 testRunner.Given("The users already exist in CDM API", ((string)(null)), table16, "Given ");
#line hidden
#line 53
 testRunner.Then("Get aligned CDM Sites and Accounts of Users from CDM API", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 54
 testRunner.Then("Get Customer Goal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Simaira.Digital_API_ ESS User Customer Goal")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "User Info Page")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("TestSuite_Simaira.Digital")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("UserInfo")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ESSUserCustomerGoal")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ESSIntegrationtest")]
        public void Simaira_Digital_API_ESSUserCustomerGoal()
        {
            string[] tagsOfScenario = new string[] {
                    "ESSUserCustomerGoal",
                    "ESSIntegrationtest"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Simaira.Digital_API_ ESS User Customer Goal", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 59
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                            "H7Id"});
                table17.AddRow(new string[] {
                            "a071O000015I1OSQA0"});
#line 60
 testRunner.Given("The H7Id already exist", ((string)(null)), table17, "Given ");
#line hidden
#line 63
 testRunner.Then("Get Connected Accounts for H7Id Info", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 64
 testRunner.Then("Set h7Id Connected Accounts", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                            "AccountNumber"});
#line 65
 testRunner.Then("Get Account Details Info", ((string)(null)), table18, "Then ");
#line hidden
#line 67
 testRunner.Then("Get Customer Goal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Simaira.Digital_API Ecolab User BenchMarking")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "User Info Page")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("TestSuite_Simaira.Digital")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("UserInfo")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Ecola3DUserBenchMarking")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Simaira.DigitalIntegrationtest")]
        public void Simaira_Digital_APIEcolabUserBenchMarking()
        {
            string[] tagsOfScenario = new string[] {
                    "Ecola3DUserBenchMarking",
                    "Simaira.DigitalIntegrationtest"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Simaira.Digital_API Ecolab User BenchMarking", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 71
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                            "Email"});
                table19.AddRow(new string[] {
                            "ecolab3dcorptest1@mailinator.com"});
                table19.AddRow(new string[] {
                            "ecolab3dunittest17@mailinator.com"});
                table19.AddRow(new string[] {
                            "ecolab3dunittest14@mailinator.com"});
#line 72
 testRunner.Given("The users already exist in CDM API", ((string)(null)), table19, "Given ");
#line hidden
#line 77
 testRunner.Then("Get aligned CDM Sites and Accounts of Users from CDM API", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                            "AccountNumber"});
#line 78
 testRunner.Then("Set User Accounts", ((string)(null)), table20, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                            "Feature"});
                table21.AddRow(new string[] {
                            "DM"});
                table21.AddRow(new string[] {
                            "HH"});
                table21.AddRow(new string[] {
                            "SS"});
#line 80
 testRunner.Given("Set Ecolab Features", ((string)(null)), table21, "Given ");
#line hidden
#line 85
 testRunner.Then("Get Customer BenchMarking", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Simaira.Digital_API_ ESS User BenchMarking")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "User Info Page")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("TestSuite_Simaira.Digital")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("UserInfo")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ESSUserCustomerBenchMarking")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ESSIntegrationtest")]
        public void Simaira_Digital_API_ESSUserBenchMarking()
        {
            string[] tagsOfScenario = new string[] {
                    "ESSUserCustomerBenchMarking",
                    "ESSIntegrationtest"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Simaira.Digital_API_ ESS User BenchMarking", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 89
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                            "H7Id"});
                table22.AddRow(new string[] {
                            "a071O000015I1OSQA0"});
#line 90
 testRunner.Given("The H7Id already exist", ((string)(null)), table22, "Given ");
#line hidden
#line 93
 testRunner.Then("Get Connected Accounts for H7Id Info", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 94
 testRunner.Then("Set h7Id Connected Accounts", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                            "AccountNumber"});
#line 95
 testRunner.Then("Get Account Details Info", ((string)(null)), table23, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                            "Feature"});
                table24.AddRow(new string[] {
                            "DM"});
                table24.AddRow(new string[] {
                            "HH"});
                table24.AddRow(new string[] {
                            "SS"});
#line 97
 testRunner.Given("Set Ecolab Features", ((string)(null)), table24, "Given ");
#line hidden
#line 102
 testRunner.Then("Get Customer BenchMarking", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
